---
import Nav from "../components/Nav.astro";
import "../assets/BoxGrid.css";
import rollSound from "../assets/reel-2.mp3";
import winSound from "../assets/win_new.mp3";
import { Image } from "astro:assets";
import logoImage from "../assets/logo.svg";
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>drink roulette</title>
  </head>
  <body>
    <Nav />
    <div class="layout-wrapper">
      <div class="title-section">
        <h1 style="letter-spacing: 1.7px;">drink roulette</h1>
        <p  style="letter-spacing: 1.7px;">not sure what you want? let the spinner pick for you from a variety of martine's best kocktails</p>
      </div>
      <div id="winner-popup" class="winner-popup hidden">
        <div class="winner-content">
          <img id="winner-image" src="" alt="Winning drink" />
          <h2 id="winner-name"></h2>
          <p id="winner-price"></p>
          <p id="winner-description"></p>
        </div>
      </div>
      <div class="main-wrapper">
        <div class="container">
          <div class="arrow-top"></div>
              <div class="box-container">
                <div id="item-grid" class="item-grid">
                  <!-- Items will be dynamically inserted here -->
                </div>
              </div>
        </div>
      </div>
      <button id="roll-button" class="circle-button" transition:animate="fade">
        <div class="logo">
          <Image src={logoImage} alt="MARTINE Logo" />
        </div>
        <div class="circular-text">
          <svg id="rotatingText" viewBox="0 0 200 200" width="220" height="220">
            <defs>
              <path id="circle" d="M 100, 100 m -85, 0 a 85, 85 0 1, 0 170, 0 a 85, 85 0 1, 0 -170, 0"></path>
            </defs>
            <text width="400">
              <textPath xlink:href="#circle" class="text"> try your luck • spin for a drink • feelin' lucky punk? • </textPath>
            </text>
          </svg>
        </div>
      </button>
    </div>
    <audio id="roll-sound" src={rollSound}></audio>
    <audio id="win-sound" src={winSound}></audio>
  </body>

  <script>
    import { shuffleArray } from "../utils/helpers";
    document.addEventListener("DOMContentLoaded", function () {
      const images = [
        { name: "il martine", price: "12", url: "https://martine.tiny.pm/public/1.png", description: "gin • dry vermouth • sake • fino • bergamot", rarity: "common" },
        { name: "old south wedge", price: "12", url: "https://martine.tiny.pm/public/2.png", description: "whiskey A.F. • vermouth cordial • sweets • bitters", rarity: "common" },
        { name: "rac-rac", price: "12", url: "https://martine.tiny.pm/public/3.png", description: "tamarind rum • coconut • banana • absinthe • cardamom", rarity: "uncommon" },
        { name: "shark bite", price: "12", url: "https://martine.tiny.pm/public/4.png", description: "mezcal • sfumato • lime • raspberry honey", rarity: "uncommon" },
        { name: "simple machines", price: "12", url: "https://martine.tiny.pm/public/5.png", description: "repo tequila • falernum • ramazotti • lemon", rarity: "rare" },
        { name: "bosozoku", price: "12", url: "https://martine.tiny.pm/public/6.png", description: "house 'sour' • choice of spirit", rarity: "legendary" },
        { name: "grappa papa", price: "12", url: "https://martine.tiny.pm/public/7.png", description: "poli grappa • lemon • demerara", rarity: "epic" },
        { name: "nardinegroni", price: "12", url: "https://martine.tiny.pm/public/8.png", description: "nardini • poli gin • poli vermouth", rarity: "epic" },
        { name: "sambuca spritz", price: "12", url: "https://martine.tiny.pm/public/9.png", description: "sambuca • lemon • prosecco • soda", rarity: "legendary" },
        { name: "the gladiator", price: "12", url: "https://martine.tiny.pm/public/10.png", description: "nardini rabarbaro • poli camamilla • mezcal • lemon", rarity: "uncommon" },
        { name: "captain gattuso", price: "12", url: "https://martine.tiny.pm/public/10.png", description: "vodka • nardini rabarbaro • lime • soda", rarity: "legendary" },
        { name: "sounds kool", price: "12", url: "https://martine.tiny.pm/public/10.png", description: "bartender's choice: choose a spirit", rarity: "epic" },
      ];

      const rarityColors = {
        common: { background: "#39FF88", border: "#39FF88" },
        uncommon: { background: "#3FA1FC", border: "#3FA1FC" },
        rare: { background: "#FF39DF", border: "#FF39DF" },
        epic: { background: "#FFD700", border: "#FFD700" },
        legendary: { background: "#FF4500", border: "#FF4500" },
      };

      const itemGrid = document.getElementById("item-grid");
      const rollButton = document.getElementById("roll-button");
      const rollSound = document.getElementById("roll-sound") as HTMLAudioElement;
      const winSound = document.getElementById("win-sound") as HTMLAudioElement;
      const winnerPopup = document.getElementById("winner-popup");
      const winnerImage = document.getElementById("winner-image");
      const winnerName = document.getElementById("winner-name");
      const winnerPrice = document.getElementById("winner-price");
      const winnerDescription = document.getElementById("winner-description");

      let isRolling = false;
      let shuffledImages = shuffleArray([...images]);

      function createItems() {
        const totalItems = 150;
        for (let i = 0; i < totalItems; i++) {
          const image = shuffledImages[i % shuffledImages.length];
          const rarityColor = rarityColors[image.rarity];
          const itemBox = document.createElement("div");
          itemBox.className = "item-box";
          itemBox.innerHTML = `
          <div class="item" style="border-color: ${rarityColor.border};">
              <div class="item-win-animation" style="background: linear-gradient(to right, rgba(0, 0, 0, 0), ${rarityColor.background}, rgba(0, 0, 0, 0));"></div>
              <div class="item-cover">
                  <img src="${image.url}" alt="${image.name}" />
              </div>
              <div class="item-info">
                  <span class="item-name">${image.name}</span>
                  <span class="item-price">$${image.price}</span>
              </div>
              <div class="rarity-indicator" style="background-color: ${rarityColor.background};"></div>
          </div>
      `;
          itemGrid.appendChild(itemBox);
        }
      }

      function showWinnerPopup(winningItem) {
        winnerImage.setAttribute("src", winningItem.url);
        winnerName.textContent = winningItem.name;
        winnerPrice.textContent = `$${winningItem.price}`;
        winnerDescription.textContent = winningItem.description;
        winnerPopup.classList.remove("hidden");
      }

      function rollRandomLeft() {
        if (isRolling) return;
        isRolling = true;
        rollButton.setAttribute("disabled", "true");
        winnerPopup.classList.add("hidden");

        shuffledImages = shuffleArray([...images]);

        itemGrid.innerHTML = "";
        createItems();

        rollSound.play();

        itemGrid.style.transition = "none";
        itemGrid.style.transform = "translateX(0%)";

        setTimeout(() => {
          const randomInRange = -50 + Math.random() * 0.5;
          console.log("random in range" + randomInRange);
          itemGrid.style.transition = "all 4.5s cubic-bezier(0.05, 0.10, 0.15, 1.0)";
          itemGrid.style.transform = `translateX(${randomInRange}%)`;

          setTimeout(() => {
            const winningItemIndex = Math.floor(itemGrid.children.length / 2) - 1;
            const winningItemElement = itemGrid.children[winningItemIndex];
            winningItemElement.classList.add("highlight");
            winSound.play();

            // Change this line to move the winning item slightly to the right
            itemGrid.style.transition = "all 0.2s cubic-bezier(0.05, 0.10, 0.15, 1.0)";
            itemGrid.style.transform = "translateX(-50%) translateX(+84px)";

            const winningItem = shuffledImages[winningItemIndex % shuffledImages.length];
            showWinnerPopup(winningItem);

            isRolling = false;
            rollButton.removeAttribute("disabled");
            rollButton.classList.remove("animate");
          }, 4500);
        }, 10);
      }

      createItems();
      rollButton.addEventListener("click", rollRandomLeft);
    });
  </script>

</html>
